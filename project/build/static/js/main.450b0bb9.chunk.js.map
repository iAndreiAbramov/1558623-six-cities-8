{"version":3,"sources":["const.ts","types/action-types.ts","store/actions.ts","store/reducers/root-reducer.ts","store/reducers/app-status-reducer.ts","store/reducers/favorites-reducer.ts","store/reducers/home-reducer.ts","store/reducers/offer-reducer.ts","store/reducers/user-reducer.ts","store/selectors.ts","components/favorites-page-empty/favorites-page-empty.tsx","utils/adapters.ts","services/browser-history.ts","services/token.ts","services/email.ts","utils/common-utils.ts","utils/project-specific-utils.ts","store/api-actions.ts","components/favorites-page-footer/favorites-page-footer.tsx","components/offer-card-bookmark/offer-card-bookmark.tsx","services/api.ts","hocs/with-handle-click.tsx","components/favorites-page-card/favorites-page-card.tsx","components/favorites-page-city/favorites-page-city.tsx","components/favorites-page-main/favorites-page-main.tsx","components/page-header-logo/page-header-logo.tsx","components/page-header-user-not-logged/page-header-user-not-logged.tsx","components/page-header-user/page-header-user.tsx","components/page-header/page-header.tsx","components/spinner-offer/spinner-offer.tsx","components/not-found-page/not-found-page.tsx","components/favorites-page/favorites-page.tsx","components/fetch-fail-message/fetch-fail-message.tsx","components/home-page-sort-dropdown/home-page-sort-dropdown.tsx","components/home-page-sort-toggler/home-page-sort-toggler.tsx","components/offer-card/offer-card.tsx","components/spinner-home/spinner-home.tsx","components/home-page-list/home-page-list.tsx","hooks/use-map.tsx","components/home-page-map/home-page-map.tsx","components/home-page-tab/home-page-tab.tsx","components/home-page-tabs/home-page-tabs.tsx","components/home-page-empty/home-page-empty.tsx","components/home-page-main/home-page-main.tsx","components/home-page/home-page.tsx","components/login-page-form/login-page-form.tsx","components/login-page/login-page.tsx","components/offer-page-gallery/offer-page-gallery.tsx","components/offer-page-goods/offer-page-goods.tsx","components/offer-page-host/offer-page-host.tsx","components/offer-page-map/offer-page-map.tsx","components/offer-page-near-list/offer-page-near-list.tsx","components/offer-page-comment/offer-page-comment.tsx","components/offer-page-comments-list/offer-page-comments-list.tsx","components/offer-page-new-comment/offer-page-new-comment.tsx","components/offer-page-reviews/offer-page-reviews.tsx","components/offer-page-main/offer-page-main.tsx","components/offer-page-bookmark/offer-page-bookmark.tsx","components/offer-page/offer-page.tsx","components/private-route/private-route.tsx","components/app/app.tsx","index.tsx"],"names":["AppRoute","AuthorizationStatus","HttpStatusCode","FetchStatus","NotificationMessage","IsFavoriteValue","RatingPosition","DEFAULT_USER_DATA","avatarUrl","email","id","isPro","name","Cities","location","latitude","longitude","zoom","DEFAULT_CITY_NAME","MapMarker","INITIAL_RATING","SortOptions","APIRoute","DEFAULT_CUSTOM_ICON","Icon","iconUrl","Default","iconSize","iconAnchor","ACTIVE_CUSTOM_ICON","Active","CardArticleClasses","CardImgWrapperClasses","ActionType","MONTHS","NameSpace","initCityAction","createAction","InitCity","cityData","offersData","pointsForMap","payload","setFetchStatus","SetFetchStatus","fetchStatus","requireAuthorization","RequireAuthorization","authStatus","requireLogout","RequireLogout","setCurrentUser","SetCurrentUser","userData","setCurrentHotel","SetCurrentHotel","currentHotel","setNearOffersData","SetNearOffersData","nearOffersData","setCurrentHotelComments","SetCurrentHotelComments","currentHotelComments","setFavoritesData","SetFavoritesData","favoritesData","initialState","appStatusReducer","createReducer","builder","addCase","state","action","favoritesReducer","activeCity","homeReducer","bedrooms","city","description","goods","host","images","isFavorite","isPremium","maxAdults","previewImage","price","rating","title","type","offerReducer","authorization","Unknown","currentUserData","userReducer","NoAuth","rootReducer","combineReducers","Favorites","Home","Offer","Status","User","getAuthorizationStatus","getCurrentUserData","getFetchStatus","getCurrentHotel","getNearOffersData","getCurrentHotelComments","getFavoritesData","getActiveCity","getOffersData","getPointsForMap","FavoritesPageEmpty","className","adaptOfferToFront","backData","adaptedData","Object","assign","is_favorite","is_premium","max_adults","preview_image","avatar_url","is_pro","adaptOffersToFront","map","item","adaptUserDataToFront","backUserData","adaptCommentsToFront","comments","adaptedComment","user","browserHistory","createBrowserHistory","AUTH_TOKEN_KEY_NAME","getToken","localStorage","getItem","USER_EMAIL","getRandomArrayItem","array","min","max","startValue","Math","ceil","endValue","floor","randomInteger","random","round","getRandomInteger","length","getMillisecondsFromDate","date","Date","parse","getVisualRating","getPointsFromOffers","notifyError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","initActiveCityAction","newCityName","dispatch","_getState","api","a","InProgress","get","Hotels","then","data","filter","offer","Success","catch","Error","getOfferDataAction","ConnectionError","getFavoritesDataAction","Favorite","FavoritesPageFooter","useDispatch","activeCityName","useSelector","to","onClick","src","alt","width","height","OfferCardBookmark","props","offerId","handleBookmarkClick","bookmarkButtonClass","xlinkHref","BASE_URL","createFreeApi","axios","create","baseURL","timeout","interceptors","request","use","requestConfig","token","headers","freeApi","withHandleClick","Component","history","useState","isFavoriteStatus","setIsFavoriteStatus","hotelId","isFavoriteValue","NotFavorite","post","pathname","response","status","Unauthorised","Unauthorized","push","Login","OfferCardBookmarkWrapped","FavoritesPageCard","offerData","visualRating","style","FavoritesPageCity","cityName","cardsList","FavoritesPageMain","offersByCities","forEach","getOffersByCities","citiesList","entries","sort","b","PageHeaderLogo","PageHeaderUserNotLogged","PageHeaderUser","userEmail","delete","Logout","removeItem","PageHeader","authorizationStatus","Auth","SpinnerOffer","NotFoundPage","FavoritesPage","isEmpty","wrapperClass","pageContent","FetchFailMessage","textAlign","fontSize","fontStyle","lineHeight","HomePageSortDropdown","clickHandler","sortOption","tabIndex","React","memo","HomePageSortToggler","Popular","PriceUp","PriceDown","RatingDown","OfferCard","onActiveCardChange","articleClass","imgWrapperClass","onMouseEnter","onMouseLeave","SpinnerHome","HomePageList","isFetching","dropdownState","setDropdownState","setSortOption","sortedData","setSortedData","useEffect","option","getSortedOffers","offerCards","cardItem","handleDropdownClick","useCallback","prevState","handleSortToggle","method","useMap","mapRef","cityLocation","setMap","flyTo","current","instance","Map","center","scrollWheelZoom","layer","TileLayer","attribution","addLayer","HomePageMap","activeCardId","useRef","markers","point","marker","Marker","lat","lng","setIcon","addTo","removeFrom","ref","HomePageTab","tabClass","toLowerCase","HomePageTabs","tabs","keys","HomePageEmpty","HomePageMain","activeCityLocation","setActiveCardId","containerClass","mainClass","handleActiveCardChange","newId","HomePage","LoginPageForm","setEmail","password","setPassword","placeholder","required","value","onInput","evt","preventDefault","currentTarget","trimLeft","loginInfo","setItem","AuthError","LoginPage","randomCityName","OfferPageGallery","imagesGallery","index","toString","OfferPageGoods","goodsList","OfferPageHost","proWrapperClass","OfferPageMap","nearbyPoints","currentPoint","offerMapRef","nearbyMarkers","nearbyMarker","currentMarker","OfferPageNearList","nearCards","OfferPageComment","commentData","comment","dateObject","dateString","getMonth","getFullYear","dateTimeString","getDate","dateTime","OfferPageCommentsList","commentsData","commentsList","slice","dataItem","OfferPageNewComment","setRating","review","setReview","submitIsDisabled","setSubmitIsDisabled","freeAPI","every","handleRatingChange","newRating","target","postNewComment","Comments","onSubmit","newReview","findIndex","PostSuccess","success","PostError","htmlFor","checked","Perfect","onChange","Good","NotBad","Badly","Terribly","disabled","OfferPageReviews","getCommentsDataAction","OfferPageBookmarkWrapped","OfferPageMain","pageData","useParams","getNearOffersAction","OfferPage","PrivateRoute","path","exact","render","App","OfferId","onUnauthorized","Promise","reject","createApi","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","SignIn","info","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450b0bb9.chunk.js","sourcesContent":["import { Icon } from 'leaflet';\nimport { CitiesTypes } from './types/state-types';\n\nexport enum AppRoute {\n  Home = '/',\n  Favorites = '/favorites',\n  Login = '/login',\n  OfferId = '/offer/:id',\n  Offer = '/offer',\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum HttpStatusCode {\n  Ok = 200,\n  NoContent = 204,\n  Unauthorised = 401,\n}\n\nexport enum FetchStatus {\n  InProgress = 'IN_PROGRESS',\n  Success = 'SUCCESS',\n  Error = 'ERROR',\n  Default = 'SUCCESS',\n}\n\nexport const FETCH_FAIL_MESSAGE = 'Failed to get data from server. Please check your network connection and try to reload the page.';\n\nexport enum NotificationMessage {\n  PostSuccess = 'Your comment successfully posted!',\n  PostError = 'Sorry, your comment wasn\\'t posted!',\n  AuthError = 'Authorization failed. Please enter correct email and password.',\n  ConnectionError = 'Sorry, action can\\'t be performed. Please check your network connection.',\n  Unauthorized = 'Please sign in to perform this action.',\n  SignIn = 'Sign in to get more functions',\n}\n\nexport enum IsFavoriteValue {\n  Favorite = '1',\n  NotFavorite = '0',\n}\n\nexport const DEFAULT_USER_DATA = {\n  avatarUrl: '../../public/img/avatar.svg',\n  email: '',\n  id: '',\n  isPro: false,\n  name: '',\n} as const;\n\nexport const DEFAULT_HOTEL_DATA = {\n  bedrooms: 0,\n  city: {\n    location: {\n      latitude: 0,\n      longitude: 0,\n      zoom: 0,\n    },\n    name: '',\n  },\n  description: '',\n  goods: [''],\n  host: {\n    avatarUrl: '',\n    id: '',\n    isPro: false,\n    name: '',\n  },\n  id: '',\n  images: [''],\n  isFavorite: false,\n  isPremium: false,\n  location: {\n    latitude: 0,\n    longitude: 0,\n    zoom: 0,\n  },\n  maxAdults: 0,\n  previewImage: '',\n  price: 0,\n  rating: 0,\n  title: '',\n  type: '',\n};\n\nexport const Cities: CitiesTypes = {\n  'Paris': {\n    name: 'Paris',\n    location: {\n      latitude: 48.85661,\n      longitude: 2.351499,\n      zoom: 13,\n    },\n  },\n  'Cologne': {\n    name: 'Cologne',\n    location: {\n      latitude: 50.938361,\n      longitude: 6.959974,\n      zoom: 13,\n    },\n  },\n  'Brussels': {\n    name: 'Brussels',\n    location: {\n      latitude: 50.846557,\n      longitude: 4.351697,\n      zoom: 13,\n    },\n  },\n  'Amsterdam': {\n    name: 'Amsterdam',\n    location: {\n      latitude: 52.38310503,\n      longitude: 4.893703165,\n      zoom: 13,\n    },\n  },\n  'Hamburg': {\n    name: 'Hamburg',\n    location: {\n      latitude: 53.550341,\n      longitude: 10.000654,\n      zoom: 13,\n    },\n  },\n  'Dusseldorf': {\n    name: 'Dusseldorf',\n    location: {\n      latitude: 51.225402,\n      longitude: 6.776314,\n      zoom: 13,\n    },\n  },\n};\n\nexport const DEFAULT_CITY_NAME = 'Paris';\nexport const TEST_CITY_NAME = 'Cologne';\n\nexport const PERCENTS_CAP = 100;\nexport const MAX_RATING = 5;\n\nexport enum RatingPosition {\n  Perfect = 4,\n  Good = 3,\n  NotBad = 2,\n  Badly = 1,\n  Terribly = 0,\n}\n\nexport const INITIAL_RATING = [false, false, false, false, false];\nexport const INITIAL_REVIEW_STATE = '';\nexport const MIN_COMMENT_LENGTH = 50;\nexport const MAX_COMMENTS_TO_SHOW = 10;\nexport const MAX_IMAGES_NUMBER = 6;\n\nexport enum MapMarker {\n  Default = './img/pin.svg',\n  Active = './img/pin-active.svg',\n}\n\nexport const DEFAULT_CUSTOM_ICON = new Icon({\n  iconUrl: MapMarker.Default,\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n});\n\nexport const ACTIVE_CUSTOM_ICON = new Icon({\n  iconUrl: MapMarker.Active,\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n});\n\nexport const CardArticleClasses = {\n  MAIN_PAGE_LIST: 'cities__place-card',\n  NEARBY_LIST: 'near-places__card',\n};\n\nexport const CardImgWrapperClasses = {\n  MAIN_PAGE_LIST: 'cities__image-wrapper',\n  NEARBY_LIST: 'near-places__image-wrapper',\n};\n\nexport enum SortOptions {\n  Popular = 'Popular',\n  PriceUp = 'Price: low to high',\n  PriceDown = 'Price: high to low',\n  RatingDown = 'Top rated first',\n}\n\nexport enum APIRoute {\n  Hotels = '/hotels',\n  Login = '/login',\n  Logout = '/logout',\n  Favorite = '/favorite',\n  Comments = '/comments',\n}\n\nexport const MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n","import { AxiosInstance } from 'axios';\nimport { StateTypes } from './state-types';\nimport { Action, ThunkAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nexport enum ActionType {\n  Unknown = 'common/unknown',\n  InitCity = 'init/initCity',\n  SetFetchStatus = 'data/setFetchStatus',\n  SetFavoritesData = 'data/setFavorites',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  SetCurrentUser = 'user/setCurrentUser',\n  SetCurrentHotel = 'offer/setHotelData',\n  SetNearOffersData = 'offer/setNearOffersData',\n  SetCurrentHotelComments = 'offer/setCurrentHotelComments',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, StateTypes, AxiosInstance, Action>;\n\nexport type ThunkAppDispatch = ThunkDispatch<StateTypes, AxiosInstance, Action>;\n","import { createAction } from '@reduxjs/toolkit';\nimport { ActionType } from '../types/action-types';\nimport { AuthorizationStatus, FetchStatus } from '../const';\nimport { CityTypes, PointTypes } from '../types/state-types';\nimport { CommentsFrontTypes } from '../types/comments-types';\nimport { FrontUserDataTypes } from '../types/user-data-types';\nimport { OfferDataTypes } from '../types/offer-data-types';\n\nexport const initCityAction = createAction(\n  ActionType.InitCity,\n  (cityData: CityTypes, offersData: OfferDataTypes[], pointsForMap: PointTypes[]) => ({\n    payload: {\n      cityData,\n      offersData,\n      pointsForMap,\n    },\n  }),\n);\n\nexport const setFetchStatus = createAction(\n  ActionType.SetFetchStatus,\n  (fetchStatus: FetchStatus) => ({\n    payload: fetchStatus,\n  }),\n);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthorizationStatus) => ({\n    payload: authStatus,\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\nexport const setCurrentUser = createAction(\n  ActionType.SetCurrentUser,\n  (userData: FrontUserDataTypes) => ({\n    payload: userData,\n  }),\n);\n\nexport const setCurrentHotel = createAction(\n  ActionType.SetCurrentHotel,\n  (currentHotel: OfferDataTypes) => ({\n    payload: currentHotel,\n  }),\n);\n\nexport const setNearOffersData = createAction(\n  ActionType.SetNearOffersData,\n  (nearOffersData: OfferDataTypes[]) => ({\n    payload: nearOffersData,\n  }),\n);\n\nexport const setCurrentHotelComments = createAction(\n  ActionType.SetCurrentHotelComments,\n  (currentHotelComments: CommentsFrontTypes[]) => ({\n    payload: currentHotelComments,\n  }),\n);\n\nexport const setFavoritesData = createAction(\n  ActionType.SetFavoritesData,\n  (favoritesData: OfferDataTypes[]) => ({\n    payload: favoritesData,\n  }),\n);\n","import {combineReducers} from 'redux';\nimport { appStatusReducer } from './app-status-reducer';\nimport { favoritesReducer } from './favorites-reducer';\nimport { homeReducer } from './home-reducer';\nimport { offerReducer } from './offer-reducer';\nimport { userReducer } from './user-reducer';\n\nexport enum NameSpace {\n  Favorites = 'FAVORITES',\n  Home = 'HOME',\n  Offer = 'OFFER',\n  Status = 'STATUS',\n  User = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.Favorites]: favoritesReducer,\n  [NameSpace.Home]: homeReducer,\n  [NameSpace.Offer]: offerReducer,\n  [NameSpace.Status]: appStatusReducer,\n  [NameSpace.User]: userReducer,\n});\n\nexport type RootStateTypes = ReturnType<typeof rootReducer>;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { FetchStatus } from '../../const';\nimport { setFetchStatus } from '../actions';\n\nexport type AppStatusTypes = {\n  fetchStatus: FetchStatus,\n}\n\nconst initialState: AppStatusTypes = {\n  fetchStatus: FetchStatus.Default,\n};\n\nexport const appStatusReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setFetchStatus, (state, action) => {\n      state.fetchStatus = action.payload;\n    });\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { OfferDataTypes } from '../../types/offer-data-types';\nimport { setFavoritesData } from '../actions';\n\nexport type FavoritesStateTypes = {\n  favoritesData: OfferDataTypes[] | [];\n}\n\nconst initialState: FavoritesStateTypes = {\n  favoritesData: [],\n};\n\nexport const favoritesReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setFavoritesData, (state, action) => {\n      state.favoritesData = action.payload;\n    });\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { Cities, DEFAULT_CITY_NAME } from '../../const';\nimport { CityTypes, PointTypes } from '../../types/state-types';\nimport { initCityAction } from '../actions';\nimport { OfferDataTypes } from '../../types/offer-data-types';\n\nexport type InitialStateTypes = {\n  activeCity: CityTypes,\n  offersData: OfferDataTypes[],\n  pointsForMap: PointTypes[],\n};\n\nconst initialState: InitialStateTypes = {\n  activeCity: {\n    name: Cities[DEFAULT_CITY_NAME].name,\n    location: {\n      latitude: Cities[DEFAULT_CITY_NAME].location.latitude,\n      longitude: Cities[DEFAULT_CITY_NAME].location.longitude,\n      zoom: Cities[DEFAULT_CITY_NAME].location.zoom,\n    },\n  },\n  offersData: [],\n  pointsForMap: [],\n};\n\nexport const homeReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(initCityAction, (state, action) => {\n      state.offersData = action.payload.offersData;\n      state.pointsForMap = action.payload.pointsForMap;\n      state.activeCity = {\n        name: action.payload.cityData.name,\n        location: {\n          latitude: action.payload.cityData.location.latitude,\n          longitude: action.payload.cityData.location.longitude,\n          zoom: action.payload.cityData.location.zoom,\n        },\n      };\n    });\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { CommentsFrontTypes } from '../../types/comments-types';\nimport { DEFAULT_HOTEL_DATA } from '../../const';\nimport { OfferDataTypes } from '../../types/offer-data-types';\nimport { setCurrentHotel, setCurrentHotelComments, setNearOffersData } from '../actions';\n\nexport type OfferStateTypes = {\n  currentHotel: OfferDataTypes,\n  nearOffersData: OfferDataTypes[],\n  currentHotelComments: CommentsFrontTypes[],\n}\n\nconst initialState: OfferStateTypes = {\n  currentHotel: DEFAULT_HOTEL_DATA,\n  nearOffersData: [],\n  currentHotelComments: [],\n};\n\nexport const offerReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setCurrentHotel, (state, action) => {\n      state.currentHotel = action.payload;\n    })\n    .addCase(setNearOffersData, (state, action) => {\n      state.nearOffersData = action.payload;\n    })\n    .addCase(setCurrentHotelComments, (state, action) => {\n      state.currentHotelComments = action.payload;\n    });\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { AuthorizationStatus, DEFAULT_USER_DATA } from '../../const';\nimport { FrontUserDataTypes } from '../../types/user-data-types';\nimport { requireAuthorization, requireLogout, setCurrentUser } from '../actions';\n\ntype UserTypes = {\n  authorization: AuthorizationStatus,\n  currentUserData: FrontUserDataTypes,\n};\n\nconst initialState: UserTypes = {\n  authorization: AuthorizationStatus.Unknown,\n  currentUserData: DEFAULT_USER_DATA,\n};\n\nexport const userReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorization = action.payload;\n    })\n    .addCase(setCurrentUser, (state, action) => {\n      state.currentUserData = action.payload;\n    })\n    .addCase(requireLogout, (state) => {\n      state.authorization = AuthorizationStatus.NoAuth;\n    });\n});\n","import { AuthorizationStatus, FetchStatus } from '../const';\nimport { CityTypes, PointTypes } from '../types/state-types';\nimport { CommentsFrontTypes } from '../types/comments-types';\nimport { FrontUserDataTypes } from '../types/user-data-types';\nimport { NameSpace, RootStateTypes } from './reducers/root-reducer';\nimport { OfferDataTypes } from '../types/offer-data-types';\n\nexport const getAuthorizationStatus = (state: RootStateTypes): AuthorizationStatus => state[NameSpace.User].authorization;\nexport const getCurrentUserData = (state: RootStateTypes): FrontUserDataTypes => state[NameSpace.User].currentUserData;\n\nexport const getFetchStatus = (state: RootStateTypes): FetchStatus => state[NameSpace.Status].fetchStatus;\n\nexport const getCurrentHotel = (state: RootStateTypes): OfferDataTypes => state[NameSpace.Offer].currentHotel;\nexport const getNearOffersData = (state: RootStateTypes): OfferDataTypes[] => state[NameSpace.Offer].nearOffersData;\nexport const getCurrentHotelComments = (state: RootStateTypes): CommentsFrontTypes[] => state[NameSpace.Offer].currentHotelComments;\n\nexport const getFavoritesData = (state: RootStateTypes): OfferDataTypes[] => state[NameSpace.Favorites].favoritesData;\n\nexport const getActiveCity = (state: RootStateTypes): CityTypes => state[NameSpace.Home].activeCity;\nexport const getOffersData = (state: RootStateTypes): OfferDataTypes[] => state[NameSpace.Home].offersData;\nexport const getPointsForMap = (state: RootStateTypes): PointTypes[] => state[NameSpace.Home].pointsForMap;\n","import React from 'react';\n\nfunction FavoritesPageEmpty(): JSX.Element {\n  return (\n    <main className=\"page__main page__main--favorites page__main--favorites-empty\" data-testid=\"favorites-empty\">\n      <div className=\"page__favorites-container container\">\n        <section className=\"favorites favorites--empty\">\n          <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n          <div className=\"favorites__status-wrapper\">\n            <b className=\"favorites__status\">Nothing yet saved.</b>\n            <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future\n              trips.\n            </p>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default FavoritesPageEmpty;\n","import { BackDataTypes } from '../types/back-data-types';\nimport { BackUserDataTypes, FrontUserDataTypes } from '../types/user-data-types';\nimport { CommentsBackTypes, CommentsFrontTypes } from '../types/comments-types';\nimport { OfferDataTypes } from '../types/offer-data-types';\n\nexport const adaptOfferToFront = (backData: BackDataTypes): OfferDataTypes => {\n  const adaptedData = Object.assign(\n    {},\n    backData,\n    {\n      isFavorite: backData.is_favorite,\n      isPremium: backData.is_premium,\n      maxAdults: backData.max_adults,\n      previewImage: backData.preview_image,\n    },\n    {\n      host: {\n        avatarUrl: backData.host.avatar_url,\n        id: backData.host.id,\n        isPro: backData.host.is_pro,\n        name: backData.host.name,\n      },\n    },\n  ) as OfferDataTypes;\n\n  delete adaptedData.is_favorite;\n  delete adaptedData.is_premium;\n  delete adaptedData.max_adults;\n  delete adaptedData.preview_image;\n  delete adaptedData.host.is_pro;\n  delete adaptedData.host.avatar_url;\n\n  return adaptedData;\n};\n\nexport const adaptOffersToFront = (backData: BackDataTypes[]): OfferDataTypes[] => (\n  backData.map((item): OfferDataTypes => (\n    adaptOfferToFront(item)\n  ))\n);\n\nexport const adaptUserDataToFront = (backUserData: BackUserDataTypes): FrontUserDataTypes => {\n  const { email, id, name } = backUserData;\n  return {\n    avatarUrl: backUserData.avatar_url,\n    isPro: backUserData.is_pro,\n    email,\n    id,\n    name,\n  };\n};\n\nexport const adaptCommentsToFront = (comments: CommentsBackTypes[]): CommentsFrontTypes[] => (\n  comments.map((item: CommentsBackTypes): CommentsFrontTypes => {\n    const adaptedComment = Object.assign(\n      {},\n      item,\n      {\n        user: {\n          avatarUrl: item.user.avatar_url,\n          id: item.user.id,\n          isPro: item.user.is_pro,\n          name: item.user.name,\n        },\n      },\n    ) as CommentsFrontTypes;\n\n    delete adaptedComment.user.avatar_url;\n    delete adaptedComment.user.is_pro;\n\n    return adaptedComment;\n  })\n);\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","const AUTH_TOKEN_KEY_NAME = 'six-sities-token';\n\ntype Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token || '';\n};\n\nexport const setToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void  => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","const USER_EMAIL = 'six-sities-email';\n\ntype Email = string;\n\nexport const getEmail = (): Email => {\n  const token = localStorage.getItem(USER_EMAIL);\n  return token || '';\n};\n\nexport const setEmail = (email: Email): void => {\n  localStorage.setItem(USER_EMAIL, email);\n};\n\nexport const dropEmail = (): void  => {\n  localStorage.removeItem(USER_EMAIL);\n};\n","export const getRandomInteger = (min: number, max: number): number => {\n  let startValue = Math.ceil(Math.min(min, max));\n  let endValue = Math.floor(Math.max(min, max));\n  startValue -= 0.5;\n  endValue += 0.5;\n  const randomInteger = startValue + Math.random() * (endValue - startValue);\n  return Math.round(randomInteger);\n};\n\nexport const getRandomArrayItem = <T>(array: T[]): T => array[getRandomInteger(0, array.length - 1)];\n\nexport const getMillisecondsFromDate = (date: string): number => (\n  Date.parse(date)\n);\n","import { CommentsFrontTypes } from '../types/comments-types';\nimport { getMillisecondsFromDate } from './common-utils';\nimport { MAX_COMMENTS_TO_SHOW, MAX_RATING, NotificationMessage, PERCENTS_CAP, SortOptions } from '../const';\nimport { OfferDataTypes } from '../types/offer-data-types';\nimport { OffersByCitiesTypes } from '../types/project-sprecific-utils-types';\nimport { ReactText } from 'react';\nimport { toast } from 'react-toastify';\nimport { PointTypes } from '../types/state-types';\n\nexport const getVisualRating = (rating: number): string => `${ Math.round(rating) * PERCENTS_CAP / MAX_RATING }%`;\n\nexport const getSortedOffers = (data: OfferDataTypes[], option: SortOptions): OfferDataTypes[] => {\n  switch (option) {\n    case SortOptions.PriceUp:\n      return [...data].sort((a, b) => a.price - b.price);\n    case SortOptions.PriceDown:\n      return [...data].sort((a, b) => b.price - a.price);\n    case SortOptions.RatingDown:\n      return [...data].sort((a, b) => b.rating - a.rating);\n    default:\n      return [...data];\n  }\n};\n\nexport const sortCommentsByDate = <T extends CommentsFrontTypes>(comments: T[]): T[] => (\n  comments\n    .slice()\n    .sort((a, b) => (\n      getMillisecondsFromDate(a.date) - getMillisecondsFromDate(b.date)\n    ))\n    .slice(-MAX_COMMENTS_TO_SHOW)\n);\n\nexport const getOffersByCities = (data: OfferDataTypes[]): OffersByCitiesTypes => {\n  const offersByCities: OffersByCitiesTypes = {};\n  data.forEach((item) => {\n    const city: string = item.city.name;\n    if (city in offersByCities) {\n      offersByCities[city].push(item);\n    } else {\n      offersByCities[city] = [item];\n    }\n  });\n\n  return offersByCities;\n};\n\nexport const getPointsFromOffers = (offersData: OfferDataTypes[]): PointTypes[] => (\n  offersData.map((item) => {\n    const { id } = item;\n    const { latitude, longitude } = item.location;\n    return { latitude, longitude, id };\n  })\n);\n\nexport const notifySuccess = (message: NotificationMessage): ReactText => toast.success(message, {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n});\n\nexport const notifyError = (message: NotificationMessage): ReactText => toast.error(message, {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n});\n\nexport const notifyInfo = (message: NotificationMessage): ReactText => toast.info(message, {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n});\n","import { APIRoute, AuthorizationStatus, Cities, DEFAULT_USER_DATA, FetchStatus, NotificationMessage } from '../const';\nimport { adaptCommentsToFront, adaptOffersToFront, adaptOfferToFront, adaptUserDataToFront } from '../utils/adapters';\nimport { BackDataTypes } from '../types/back-data-types';\nimport browserHistory from '../services/browser-history';\nimport { dropToken, setToken } from '../services/token';\nimport { dropEmail, setEmail } from '../services/email';\nimport {\n  initCityAction,\n  requireAuthorization,\n  setCurrentHotel,\n  setCurrentHotelComments,\n  setCurrentUser,\n  setFavoritesData,\n  setFetchStatus,\n  setNearOffersData\n} from './actions';\nimport { ThunkActionResult } from '../types/action-types';\nimport { UserLoginTypes } from '../types/user-data-types';\nimport { getPointsFromOffers, notifyError, notifyInfo } from '../utils/project-specific-utils';\n\nexport const initActiveCityAction = (newCityName: string): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(setFetchStatus(FetchStatus.InProgress));\n    await api.get<BackDataTypes[]>(APIRoute.Hotels)\n      .then(({ data }) => {\n        const offersData = adaptOffersToFront(data)\n          .filter((offer) => offer.city.name === newCityName);\n        const cityData = Cities[newCityName];\n        const pointsForMap = getPointsFromOffers(offersData);\n        dispatch(initCityAction(cityData, offersData, pointsForMap));\n      })\n      .then(() => dispatch(setFetchStatus(FetchStatus.Success)))\n      .catch(() => dispatch(setFetchStatus(FetchStatus.Error)));\n  }\n);\n\nexport const getOfferDataAction = (id: string): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(setFetchStatus(FetchStatus.InProgress));\n    await api.get(`${ APIRoute.Hotels }/${ id }`)\n      .then(({ data }) => {\n        dispatch(setCurrentHotel(adaptOfferToFront(data)));\n        dispatch(setFetchStatus(FetchStatus.Success));\n      })\n      .catch(() => {\n        notifyError(NotificationMessage.ConnectionError);\n        dispatch(setFetchStatus(FetchStatus.Error));\n      });\n  }\n);\n\nexport const getCommentsDataAction = (id: string): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.get(`${ APIRoute.Comments }/${ id }`)\n      .then(({ data }) => {\n        dispatch(setCurrentHotelComments(adaptCommentsToFront(data)));\n      });\n  }\n);\n\nexport const getNearOffersAction = (id: string): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.get(`${ APIRoute.Hotels }/${ id }/nearby`)\n      .then(({ data }) => {\n        dispatch(setNearOffersData(adaptOffersToFront(data)));\n      });\n  }\n);\n\nexport const getFavoritesDataAction = (): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(setFetchStatus(FetchStatus.InProgress));\n    await api.get(APIRoute.Favorite )\n      .then(({ data }) => {\n        dispatch(setFavoritesData(adaptOffersToFront(data)));\n        dispatch(setFetchStatus(FetchStatus.Success));\n      })\n      .catch(() => {\n        dispatch(setFetchStatus(FetchStatus.Error));\n        notifyError(NotificationMessage.ConnectionError);\n      });\n  }\n);\n\nexport const checkAuthAction = (): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.get(APIRoute.Login)\n      .then(() => {\n        dispatch(requireAuthorization(AuthorizationStatus.Auth));\n      })\n      .catch(() => {\n        dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n        notifyInfo(NotificationMessage.SignIn);\n      });\n  });\n\nexport const requestLoginAction = (loginInfo: UserLoginTypes): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.post(APIRoute.Login, loginInfo)\n      .then(({ data }) => {\n        dispatch(requireAuthorization(AuthorizationStatus.Auth));\n        setToken(data.token);\n        setEmail(data.email);\n        dispatch(setCurrentUser(adaptUserDataToFront(data)));\n        browserHistory.push('/');\n      })\n      .catch(() => notifyError(NotificationMessage.AuthError));\n  }\n);\n\nexport const requestLogoutAction = (): ThunkActionResult => (\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.delete(APIRoute.Logout)\n      .then(() => {\n        dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n        dropToken();\n        dropEmail();\n        dispatch(setCurrentUser(DEFAULT_USER_DATA));\n      });\n  }\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppRoute } from '../../const';\nimport { getActiveCity } from '../../store/selectors';\nimport { initActiveCityAction } from '../../store/api-actions';\n\nfunction FavoritesPageFooter(): JSX.Element {\n  const dispatch = useDispatch();\n  const activeCityName = useSelector(getActiveCity).name;\n\n  return (\n    <footer className=\"footer container\" data-testid=\"favorites-footer\">\n      <Link\n        className=\"footer__logo-link\"\n        to={ AppRoute.Home }\n        onClick={ () => dispatch(initActiveCityAction(activeCityName)) }\n      >\n        <img className=\"footer__logo\" src=\"./img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n      </Link>\n    </footer>\n  );\n}\n\nexport default FavoritesPageFooter;\n","import React from 'react';\n\nexport type OfferCardBookmarkTypes = {\n  isFavorite: boolean,\n  offerId: string,\n  handleBookmarkClick: ((offerId: string) => Promise<void>) | (() => null);\n}\n\nfunction OfferCardBookmark(props: OfferCardBookmarkTypes): JSX.Element {\n  const { isFavorite, offerId, handleBookmarkClick } = props;\n\n  const bookmarkButtonClass = isFavorite\n    ? 'place-card__bookmark-button place-card__bookmark-button--active button'\n    : 'place-card__bookmark-button button';\n\n  return (\n    <button\n      className={ bookmarkButtonClass }\n      type=\"button\"\n      onClick={ () => handleBookmarkClick(offerId) }\n    >\n      <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n        <use xlinkHref=\"#icon-bookmark\" />\n      </svg>\n      <span className=\"visually-hidden\">To bookmarks</span>\n    </button>\n  );\n}\n\nexport default OfferCardBookmark;\n","import axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { getToken } from './token';\nimport { HttpStatusCode } from '../const';\n\nconst BASE_URL = 'https://8.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\ntype UnauthorizedCallback = () => void;\n\nexport const createApi = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BASE_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.request.use(\n    (requestConfig: AxiosRequestConfig) => {\n      const token = getToken();\n      if (token) {\n        requestConfig.headers['x-token'] = token;\n      }\n\n      return requestConfig;\n    },\n  );\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n    (error: AxiosError) => {\n      const { response } = error;\n      if (response?.status === HttpStatusCode.Unauthorised) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    });\n\n  return api;\n};\n\nexport const createFreeApi = (): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BASE_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.request.use(\n    (requestConfig: AxiosRequestConfig) => {\n      const token = getToken();\n      if (token) {\n        requestConfig.headers['x-token'] = token;\n      }\n\n      return requestConfig;\n    },\n  );\n\n  return api;\n};\n","import React, { ComponentType, JSXElementConstructor, useState } from 'react';\nimport { APIRoute, AppRoute, HttpStatusCode, IsFavoriteValue, NotificationMessage } from '../const';\nimport { adaptOfferToFront } from '../utils/adapters';\nimport browserHistory from '../services/browser-history';\nimport { OfferCardBookmarkTypes } from '../components/offer-card-bookmark/offer-card-bookmark';\nimport { notifyError } from '../utils/project-specific-utils';\nimport { createFreeApi } from '../services/api';\nimport { useDispatch } from 'react-redux';\nimport { getFavoritesDataAction } from '../store/api-actions';\n\nconst freeApi = createFreeApi();\n\nfunction withHandleClick(\n  Component: JSXElementConstructor<OfferCardBookmarkTypes>,\n): ComponentType<OfferCardBookmarkTypes> {\n  function WithHandleClick(props: OfferCardBookmarkTypes): JSX.Element {\n    const history = browserHistory;\n    const dispatch = useDispatch();\n    const { isFavorite, offerId } = props;\n    const [isFavoriteStatus, setIsFavoriteStatus] = useState(isFavorite);\n\n    const handleBookmarkClick = async (hotelId: string): Promise<void> => {\n      const isFavoriteValue = isFavoriteStatus ? IsFavoriteValue.NotFavorite : IsFavoriteValue.Favorite;\n      await freeApi.post(`${ APIRoute.Favorite }/${ hotelId }/${ isFavoriteValue }`)\n        .then(({ data }) => {\n          setIsFavoriteStatus(adaptOfferToFront(data).isFavorite);\n          if (history.location.pathname === AppRoute.Favorites) {\n            dispatch(getFavoritesDataAction());\n          }\n        })\n        .catch(({ response }) => {\n          if (response?.status === HttpStatusCode.Unauthorised) {\n            notifyError(NotificationMessage.Unauthorized);\n            history.push(AppRoute.Login);\n          } else {\n            notifyError(NotificationMessage.ConnectionError);\n          }\n        });\n    };\n\n    return (\n      <Component\n        isFavorite={ isFavoriteStatus }\n        offerId={ offerId }\n        handleBookmarkClick={ handleBookmarkClick }\n      />\n    );\n  }\n\n  return WithHandleClick;\n}\n\nexport default withHandleClick;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { AppRoute, MAX_RATING, PERCENTS_CAP } from '../../const';\nimport { getOfferDataAction } from '../../store/api-actions';\nimport OfferCardBookmark from '../offer-card-bookmark/offer-card-bookmark';\nimport { OfferDataTypes } from '../../types/offer-data-types';\nimport withHandleClick from '../../hocs/with-handle-click';\n\nconst OfferCardBookmarkWrapped = withHandleClick(OfferCardBookmark);\n\ntype FavoritesCardTypes = {\n  data: OfferDataTypes,\n};\n\nfunction FavoritesPageCard(props: FavoritesCardTypes): JSX.Element {\n  const dispatch = useDispatch();\n  const { data: offerData } = props;\n  const { price, rating, id, type, title, previewImage, isFavorite, isPremium } = offerData;\n  const visualRating = `${ rating * PERCENTS_CAP / MAX_RATING }%`;\n\n  return (\n    <article className=\"favorites__card place-card\">\n      {\n        isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>\n      }\n      <div className=\"favorites__image-wrapper place-card__image-wrapper\">\n        <Link\n          to={ `${ AppRoute.Offer }/${ id }` }\n          onClick={ () => dispatch(getOfferDataAction(id)) }\n        >\n          <img className=\"place-card__image\" src={ previewImage } width=\"150\" height=\"110\"\n            alt=\"Place view\"\n          />\n        </Link>\n      </div>\n      <div className=\"favorites__card-info place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{ price }</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <OfferCardBookmarkWrapped\n            isFavorite={ isFavorite }\n            offerId={ id }\n            handleBookmarkClick={ () => null }\n          />\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={ { width: visualRating } } />\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link\n            to={ `${ AppRoute.Offer }/${ id }` }\n            onClick={ () => dispatch(getOfferDataAction(id)) }\n          >\n            { title }\n          </Link>\n        </h2>\n        <p className=\"place-card__type\">{ type }</p>\n      </div>\n    </article>\n  );\n}\n\nexport default FavoritesPageCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FavoritesPageCard from '../favorites-page-card/favorites-page-card';\nimport { initActiveCityAction } from '../../store/api-actions';\nimport { OfferDataTypes } from '../../types/offer-data-types';\nimport { useDispatch } from 'react-redux';\n\ntype FavoritesCityTypes = {\n  cityName: string,\n  data: OfferDataTypes[],\n}\n\nfunction FavoritesPageCity(props: FavoritesCityTypes): JSX.Element {\n  const dispatch = useDispatch();\n  const { cityName, data } = props;\n  const cardsList = data.map((item) => (\n    <FavoritesPageCard\n      key={ item.id }\n      data={ item }\n    />\n  ));\n\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <Link\n            className=\"locations__item-link\"\n            to=\"/\"\n            data-testid='favorites-home-link'\n            onClick={ () => dispatch(initActiveCityAction(cityName)) }\n          >\n            <span>\n              { cityName }\n            </span>\n          </Link>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        { cardsList }\n      </div>\n    </li>\n  );\n}\n\nexport default FavoritesPageCity;\n","import React from 'react';\nimport FavoritesPageCity from '../favorites-page-city/favorites-page-city';\nimport { getOffersByCities } from '../../utils/project-specific-utils';\nimport { OfferDataTypes } from '../../types/offer-data-types';\n\ntype FavoritesMainTypes = {\n  favoritesData: OfferDataTypes[],\n}\n\nfunction FavoritesPageMain(props: FavoritesMainTypes): JSX.Element {\n  const { favoritesData } = props;\n  const offersByCities = getOffersByCities(favoritesData);\n  const citiesList = Object.entries(offersByCities)\n    .sort((a, b) =>  b[0] > a[0] ? -1 : 1)\n    .map((cityData) => {\n      const [cityName, data] = cityData;\n      return (\n        <FavoritesPageCity\n          key={ cityName }\n          cityName={ cityName }\n          data={ data }\n        />\n      );\n    });\n\n  return (\n    <main className=\"page__main page__main--favorites\" data-testid=\"favorites-main\">\n      <div className=\"page__favorites-container container\">\n        <section className=\"favorites\">\n          <h1 className=\"favorites__title\">Saved listing</h1>\n          <ul className=\"favorites__list\">\n            { citiesList }\n          </ul>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default FavoritesPageMain;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getActiveCity } from '../../store/selectors';\nimport { initActiveCityAction } from '../../store/api-actions';\n\nfunction PageHeaderLogo(): JSX.Element {\n  const dispatch = useDispatch();\n  const activeCityName = useSelector(getActiveCity).name;\n  return (\n    <div className=\"header__left\">\n      <Link\n        to={ AppRoute.Home }\n        className=\"header__logo-link header__logo-link--active\"\n        onClick={ () => dispatch(initActiveCityAction(activeCityName)) }\n        data-testid=\"header-logo\"\n      >\n        <img className=\"header__logo\" src=\"./img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\"/>\n      </Link>\n    </div>\n  );\n}\n\nexport default PageHeaderLogo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction PageHeaderUserNotLogged(): JSX.Element {\n  return (\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item user\">\n          <Link to={ AppRoute.Login } className=\"header__nav-link header__nav-link--profile\">\n            <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n            </div>\n            <span className=\"header__login\">Sign in</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default PageHeaderUserNotLogged;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppRoute } from '../../const';\nimport { getCurrentUserData } from '../../store/selectors';\nimport { getEmail } from '../../services/email';\nimport { getFavoritesDataAction, requestLogoutAction } from '../../store/api-actions';\n\nfunction PageHeaderUser(): JSX.Element {\n  const userEmail = useSelector(getCurrentUserData).email;\n  const dispatch = useDispatch();\n  const email = userEmail ? userEmail : getEmail();\n\n  return (\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item user\">\n          <Link\n            className=\"header__nav-link header__nav-link--profile\"\n            to={ AppRoute.Favorites }\n            onClick={ () => dispatch(getFavoritesDataAction()) }\n          >\n            <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n            </div>\n            <span className=\"header__user-name user__name\">{ email }</span>\n          </Link>\n        </li>\n        <li\n          className=\"header__nav-item\"\n          onClick={ () => dispatch(requestLogoutAction()) }\n        >\n          <Link to=\"/\" className=\"header__nav-link\">\n            <span className=\"header__signout\">Sign out</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default PageHeaderUser;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/selectors';\nimport PageHeaderLogo from '../page-header-logo/page-header-logo';\nimport PageHeaderUserNotLogged from '../page-header-user-not-logged/page-header-user-not-logged';\nimport PageHeaderUser from '../page-header-user/page-header-user';\n\nfunction PageHeader(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <header className=\"header\" data-testid=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <PageHeaderLogo />\n          {\n            authorizationStatus === AuthorizationStatus.Auth\n              ? <PageHeaderUser />\n              : <PageHeaderUserNotLogged />\n          }\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default PageHeader;\n","import React from 'react';\nimport './spinner-offer.css';\n\nfunction SpinnerOffer(): JSX.Element {\n  return (\n    <div className=\"spinner-offer-overlay\">\n      <div className=\"spinner-offer-wrapper\">\n        <div className=\"spinner-offer\">\n          <span className=\"visually-hidden\">Please wait. Loading in progress.</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SpinnerOffer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport './not-found-page.css';\n\nfunction NotFoundPage(): JSX.Element {\n  return (\n    <div className=\"not-found-message-wrapper\" data-testid=\"not-found-page-wrapper\">\n      <p className=\"not-found-title\">\n        Error 404.\n      </p>\n      <p className=\"not-found-message\">\n        Requested page not found.\n      </p>\n      <Link className=\"not-found-link\" to={ AppRoute.Home }>\n        Return to main page\n      </Link>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFavoritesData, getFetchStatus } from '../../store/selectors';\nimport FavoritesPageEmpty from '../favorites-page-empty/favorites-page-empty';\nimport FavoritesPageFooter from '../favorites-page-footer/favorites-page-footer';\nimport FavoritesPageMain from '../favorites-page-main/favorites-page-main';\nimport { FetchStatus } from '../../const';\nimport PageHeader from '../page-header/page-header';\nimport SpinnerOffer from '../spinner-offer/spinner-offer';\nimport NotFoundPage from '../not-found-page/not-found-page';\n\nfunction FavoritesPage(): JSX.Element {\n  const favoritesData = useSelector(getFavoritesData);\n  const fetchStatus = useSelector(getFetchStatus);\n  const isEmpty = favoritesData.length === 0;\n  const wrapperClass: string = isEmpty ? 'page page--favorites-empty' : 'page';\n  const pageContent: JSX.Element = isEmpty\n    ? <FavoritesPageEmpty />\n    : <FavoritesPageMain favoritesData={ favoritesData } />;\n\n  return (\n    <div className={ wrapperClass }>\n      { fetchStatus === FetchStatus.InProgress && <SpinnerOffer /> }\n      {\n        fetchStatus === FetchStatus.Success &&\n        <>\n          <PageHeader />\n          { pageContent }\n          <FavoritesPageFooter />\n        </>\n      }\n      {\n        fetchStatus === FetchStatus.Error && <NotFoundPage />\n      }\n    </div>\n  );\n}\n\nexport default FavoritesPage;\n","import React from 'react';\nimport { FETCH_FAIL_MESSAGE } from '../../const';\n\nfunction FetchFailMessage(): JSX.Element {\n  return (\n    <span style={ {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: '26px',\n      fontStyle: 'italic',\n      lineHeight: '1.4',\n    } }\n    >\n      { FETCH_FAIL_MESSAGE }\n    </span>\n  );\n}\n\nexport default FetchFailMessage;\n","import React from 'react';\n\ntype HomePageSortDropdownTypes = {\n  sortOption: string,\n  clickHandler: () => void,\n}\n\nfunction HomePageSortDropdown(props: HomePageSortDropdownTypes): JSX.Element {\n  const { clickHandler, sortOption } = props;\n  return (\n    <span\n      onClick={ clickHandler }\n      className=\"places__sorting-type\"\n      tabIndex={ 0 }\n      data-testid=\"home-list-sort-dropdown\"\n    >\n      { sortOption }\n      <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n        <use xlinkHref=\"#icon-arrow-select\" />\n      </svg>\n    </span>\n  );\n}\n\nexport default React.memo(HomePageSortDropdown);\n","import React from 'react';\nimport { SortOptions } from '../../const';\n\ntype HomePageSortTogglerTypes = {\n  clickHandler: (sortOption: SortOptions) => void,\n}\n\nfunction HomePageSortToggler(props: HomePageSortTogglerTypes): JSX.Element {\n  const { clickHandler } = props;\n  return (\n    <ul className=\"places__options places__options--custom places__options--opened\">\n      <li\n        onClick={ () => clickHandler(SortOptions.Popular) }\n        className=\"places__option places__option--active\"\n        tabIndex={ 0 }\n      >\n        Popular\n      </li>\n      <li\n        onClick={ () => clickHandler(SortOptions.PriceUp) }\n        className=\"places__option\"\n        tabIndex={ 0 }\n      >\n        Price: low to high\n      </li>\n      <li\n        onClick={ () => clickHandler(SortOptions.PriceDown) }\n        className=\"places__option\"\n        tabIndex={ 0 }\n      >\n        Price: high to low\n      </li>\n      <li\n        onClick={ () => clickHandler(SortOptions.RatingDown) }\n        className=\"places__option\"\n        tabIndex={ 0 }\n      >\n        Top rated first\n      </li>\n    </ul>\n  );\n}\n\nexport default HomePageSortToggler;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { AppRoute } from '../../const';\nimport { getOfferDataAction } from '../../store/api-actions';\nimport OfferCardBookmark from '../offer-card-bookmark/offer-card-bookmark';\nimport { OfferDataTypes } from '../../types/offer-data-types';\nimport { getVisualRating } from '../../utils/project-specific-utils';\nimport withHandleClick from '../../hocs/with-handle-click';\n\nconst OfferCardBookmarkWrapped = withHandleClick(OfferCardBookmark);\n\ntype OfferCardTypes = {\n  data: OfferDataTypes,\n  onActiveCardChange?: (newId: string) => void,\n  articleClass: string,\n  imgWrapperClass: string,\n};\n\nfunction OfferCard(props: OfferCardTypes): JSX.Element {\n  const dispatch = useDispatch();\n  const { data: offerData, onActiveCardChange, articleClass, imgWrapperClass } = props;\n  const { id, price, rating, title, previewImage, type, isPremium, isFavorite } = offerData;\n\n  const visualRating = getVisualRating(rating);\n\n  return (\n    <article\n      data-testid='offer-card'\n      className={ `${ articleClass } place-card` }\n      onMouseEnter={ () => onActiveCardChange && onActiveCardChange(id) }\n      onMouseLeave={ () => onActiveCardChange && onActiveCardChange('') }\n    >\n      {\n        isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>\n      }\n      <div className={ `${ imgWrapperClass } place-card__image-wrapper` }>\n        <Link\n          to={ `${ AppRoute.Offer }/${ id }` }\n          onClick={ () => dispatch(getOfferDataAction(id)) }\n        >\n          <img className=\"place-card__image\" src={ previewImage } width=\"260\" height=\"200\"\n            alt=\"Place view\"\n          />\n        </Link>\n      </div>\n      <div className=\"place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{ price }</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <OfferCardBookmarkWrapped\n            isFavorite={ isFavorite }\n            offerId={ id }\n            handleBookmarkClick={ () => null }\n          />\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={ { width: visualRating } } />\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link\n            to={ `${ AppRoute.Offer }/${ id }` }\n            onClick={ () => dispatch(getOfferDataAction(id)) }\n          >\n            { title }\n          </Link>\n        </h2>\n        <p className=\"place-card__type\">{ type }</p>\n      </div>\n    </article>\n  );\n}\n\nexport default OfferCard;\n","import React from 'react';\nimport './spinner-home.css';\n\nfunction SpinnerHome(): JSX.Element {\n  return (\n    <div className=\"spinner-home-overlay\">\n      <div className=\"spinner-home-wrapper\">\n        <div className=\"spinner-home\">\n          <span className=\"visually-hidden\">Please wait. Loading in progress.</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SpinnerHome;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CardArticleClasses, CardImgWrapperClasses, FetchStatus, SortOptions } from '../../const';\nimport { getActiveCity, getFetchStatus } from '../../store/selectors';\nimport FetchFailMessage from '../fetch-fail-message/fetch-fail-message';\nimport HomePageSortDropdown from '../home-page-sort-dropdown/home-page-sort-dropdown';\nimport HomePageSortToggler from '../home-page-sort-toggler/home-page-sort-toggler';\nimport { OfferDataTypes } from '../../types/offer-data-types';\nimport OfferCard from '../offer-card/offer-card';\nimport SpinnerHome from '../spinner-home/spinner-home';\nimport { getSortedOffers } from '../../utils/project-specific-utils';\n\ntype HomePageListTypes = {\n  offersData: OfferDataTypes[],\n  onActiveCardChange?: (newId: string) => void,\n};\n\nfunction HomePageList(props: HomePageListTypes): JSX.Element {\n  const isFetching = useSelector(getFetchStatus);\n  const activeCityName = useSelector(getActiveCity).name;\n  const { offersData, onActiveCardChange } = props;\n\n  const [dropdownState, setDropdownState] = useState(false);\n  const [sortOption, setSortOption] = useState(SortOptions.Popular);\n  const [sortedData, setSortedData] = useState([...offersData]);\n\n  useEffect(() => {\n    setSortedData(getSortedOffers([...offersData], sortOption));\n  }, [offersData, sortOption]);\n\n  const offerCards = sortedData.map((cardItem) => {\n    const { id } = cardItem;\n    return (\n      <OfferCard\n        key={ id }\n        data={ cardItem }\n        onActiveCardChange={ onActiveCardChange }\n        articleClass={ CardArticleClasses.MAIN_PAGE_LIST }\n        imgWrapperClass={ CardImgWrapperClasses.MAIN_PAGE_LIST }\n      />\n    );\n  });\n\n  const handleDropdownClick = useCallback((): void => {\n    setDropdownState((prevState: boolean) => !prevState);\n  }, []);\n\n  const handleSortToggle = useCallback((option: SortOptions) => {\n    setDropdownState((prevState: boolean) => !prevState);\n    setSortOption(option);\n  }, []);\n\n  return (\n    <section className=\"cities__places places\" data-testid=\"home-list\">\n      { isFetching === FetchStatus.InProgress && <SpinnerHome /> }\n      { isFetching === FetchStatus.Error && <FetchFailMessage /> }\n      {\n        isFetching === FetchStatus.Success\n        &&\n        <>\n          <h2 className=\"visually-hidden\">Places</h2>\n          <b className=\"places__found\">{ offersData.length } places to stay in { activeCityName }</b>\n          <form className=\"places__sorting\" action=\"#\" method=\"get\">\n            <span className=\"places__sorting-caption\">Sort by</span>\n            <HomePageSortDropdown\n              sortOption={ sortOption }\n              clickHandler={ handleDropdownClick }\n            />\n            {\n              dropdownState\n              &&\n              <HomePageSortToggler\n                clickHandler={ handleSortToggle }\n              />\n            }\n          </form>\n          <div className=\"cities__places-list places__list tabs__content\" style={ { position: 'relative' } }>\n            { offerCards }\n          </div>\n        </>\n      }\n    </section>\n  );\n}\n\nexport default HomePageList;\n","import { Map, TileLayer } from 'leaflet';\nimport { MutableRefObject, useEffect, useState } from 'react';\nimport { CityLocationTypes } from '../types/state-types';\n\nfunction useMap(\n  mapRef: MutableRefObject<HTMLElement | null>,\n  cityLocation: CityLocationTypes,\n): Map | null {\n  const [map, setMap] = useState<Map | null>(null);\n  const { latitude, longitude, zoom } = cityLocation;\n\n  useEffect(() => {\n    if (map !== null) {\n      map.flyTo([latitude, longitude], zoom);\n    }\n    if (mapRef.current !== null && map === null) {\n      const instance = new Map(mapRef.current, {\n        center: [latitude, longitude],\n        zoom: zoom,\n        scrollWheelZoom: false,\n      });\n      const layer = new TileLayer(\n        'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n        {\n          attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a' +\n            ' href=\"https://carto.com/attributions\">CARTO</a>',\n        },\n      );\n\n      instance.addLayer(layer);\n      setMap(instance);\n    }\n  }, [mapRef, map, latitude, longitude, zoom]);\n\n  return map;\n}\n\nexport default useMap;\n","import React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport { ACTIVE_CUSTOM_ICON, DEFAULT_CUSTOM_ICON } from '../../const';\nimport { CityLocationTypes, PointTypes } from '../../types/state-types';\nimport { Marker } from 'leaflet';\nimport useMap from '../../hooks/use-map';\n\ntype HomePageMapProps = {\n  activeCardId: string,\n  cityLocation: CityLocationTypes,\n  pointsForMap: PointTypes[],\n}\n\nfunction HomePageMap(props: HomePageMapProps): JSX.Element {\n  const { activeCardId, cityLocation, pointsForMap } = props;\n\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, cityLocation);\n  const markers: Marker[] = [];\n\n  useEffect(() => {\n    if (map) {\n      pointsForMap.forEach((point) => {\n        const marker = new Marker({\n          lat: point.latitude,\n          lng: point.longitude,\n        });\n\n        marker\n          .setIcon(\n            activeCardId && activeCardId === point.id\n              ? ACTIVE_CUSTOM_ICON\n              : DEFAULT_CUSTOM_ICON,\n          )\n          .addTo(map);\n        markers.push(marker);\n      });\n      return () => markers.forEach((marker) => marker.removeFrom(map));\n    }\n  });\n\n  return (\n    <div className=\"cities__right-section\" data-testid=\"home-map\">\n      <section\n        className=\"cities__map map\"\n        ref={ mapRef }\n      />\n    </div>\n  );\n}\n\nexport default HomePageMap;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getActiveCity } from '../../store/selectors';\nimport { initActiveCityAction } from '../../store/api-actions';\n\nfunction HomePageTab(props: { name: string }): JSX.Element {\n  const activeCityName= useSelector(getActiveCity).name;\n  const dispatch = useDispatch();\n  const { name } = props;\n  const tabClass = name.toLowerCase() === activeCityName.toLowerCase()\n    ? 'locations__item-link tabs__item tabs__item--active'\n    : 'locations__item-link tabs__items';\n\n  const handleTabClick = () => dispatch(initActiveCityAction(name));\n\n  return (\n    <Link className={ tabClass } to=\"/\" onClick={ handleTabClick }>\n      <span >\n        { name }\n      </span>\n    </Link>\n  );\n}\n\nexport default HomePageTab;\n","import React from 'react';\nimport { Cities } from '../../const';\nimport HomePageTab from '../home-page-tab/home-page-tab';\n\nfunction HomePageTabs(): JSX.Element {\n  const tabs = Object.keys(Cities).map((cityName) => (\n    <li key={ cityName } className=\"locations__item\">\n      <HomePageTab\n        name={ cityName }\n      />\n    </li>\n  ));\n\n  return (\n    <div className=\"tabs\" data-testid=\"home-tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          { tabs }\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default React.memo(HomePageTabs);\n","import React from 'react';\n\ntype HomePageEmptyTypes = {\n  activeCityName: string,\n}\n\nfunction HomePageEmpty(props: HomePageEmptyTypes): JSX.Element {\n  const { activeCityName } = props;\n  return (\n    <>\n      <section className=\"cities__no-places\">\n        <div className=\"cities__status-wrapper tabs__content\">\n          <b className=\"cities__status\">No places to stay available</b>\n          <p className=\"cities__status-description\">We could not find any property available at the moment in { activeCityName }</p>\n        </div>\n      </section>\n      <div className=\"cities__right-section\" />\n    </>\n  );\n}\n\nexport default HomePageEmpty;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FetchStatus } from '../../const';\nimport { getActiveCity, getFetchStatus, getOffersData, getPointsForMap } from '../../store/selectors';\nimport HomePageList from '../home-page-list/home-page-list';\nimport HomePageMap from '../home-page-map/home-page-map';\nimport HomePageTabs from '../home-page-tabs/home-page-tabs';\nimport HomePageEmpty from '../home-page-empty/home-page-empty';\nimport { initActiveCityAction } from '../../store/api-actions';\n\nfunction HomePageMain(): JSX.Element {\n  const fetchStatus = useSelector(getFetchStatus);\n  const offersData = useSelector(getOffersData);\n  const activeCityName = useSelector(getActiveCity).name;\n  const activeCityLocation = useSelector(getActiveCity).location;\n  const pointsForMap = useSelector(getPointsForMap);\n\n  const dispatch = useDispatch();\n\n  const [activeCardId, setActiveCardId] = useState('');\n  const containerClass = offersData.length > 0\n    ? 'cities__places-container container'\n    : 'cities__places-container cities__places-container--empty container';\n  const mainClass = offersData.length > 0\n    ? 'page__main page__main--index'\n    : 'page__main page__main--index page__main--index-empty';\n\n  useEffect(() => {\n    if (offersData === []) {\n      dispatch(initActiveCityAction(activeCityName));\n    }\n  }, [activeCityName, dispatch, offersData]);\n\n  const handleActiveCardChange = useCallback((newId: string): void => (\n    setActiveCardId(newId)\n  ), []);\n\n  return (\n    <main className={ mainClass }>\n      <h1 className=\"visually-hidden\">Cities</h1>\n      <HomePageTabs />\n      <div className=\"cities\">\n        <div className={ containerClass }>\n          {\n            offersData.length === 0 && fetchStatus === FetchStatus.Success\n            && <HomePageEmpty activeCityName={ activeCityName } />\n          }\n          {\n            offersData.length > 0\n            &&\n            <>\n              <HomePageList\n                offersData={ offersData }\n                onActiveCardChange={ handleActiveCardChange }\n              />\n              <HomePageMap\n                activeCardId={ activeCardId }\n                cityLocation={ activeCityLocation }\n                pointsForMap={ pointsForMap }\n              />\n            </>\n          }\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default HomePageMain;\n","import React from 'react';\nimport HomePageMain from '../home-page-main/home-page-main';\nimport PageHeader from '../page-header/page-header';\n\nfunction HomePage(): JSX.Element {\n  return (\n    <div className=\"page page--gray page--main\">\n      <PageHeader />\n      <HomePageMain />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { FormEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { requestLoginAction } from '../../store/api-actions';\n\nfunction LoginPageForm(): JSX.Element {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLoginInput = (evt: FormEvent<HTMLInputElement>): void => {\n    evt.preventDefault();\n    setEmail(evt.currentTarget.value);\n  };\n  const handlePasswordInput = (evt: FormEvent<HTMLInputElement>): void => {\n    evt.preventDefault();\n    setPassword(evt.currentTarget.value.trimLeft());\n  };\n  const handleButtonClick = (evt: FormEvent) => {\n    evt.preventDefault();\n    dispatch(requestLoginAction({ email, password }));\n  };\n\n  return (\n    <form className=\"login__form form\" action=\"#\" method=\"post\">\n      <div className=\"login__input-wrapper form__input-wrapper\">\n        <label className=\"visually-hidden\">E-mail</label>\n        <input\n          className=\"login__input form__input\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required\n          value={ email }\n          onInput={ handleLoginInput }\n          data-testid=\"email\"\n        />\n      </div>\n      <div className=\"login__input-wrapper form__input-wrapper\">\n        <label className=\"visually-hidden\">Password</label>\n        <input\n          className=\"login__input form__input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          value={ password }\n          onInput={ handlePasswordInput }\n          data-testid=\"password\"\n        />\n      </div>\n      <button\n        className=\"login__submit form__submit button\"\n        type=\"submit\"\n        onClick={ handleButtonClick }\n      >\n        Sign in\n      </button>\n    </form>\n  );\n}\n\nexport default LoginPageForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Cities } from '../../const';\nimport LoginPageForm from '../login-page-form/login-page-form';\nimport { getRandomArrayItem } from '../../utils/common-utils';\nimport { initActiveCityAction } from '../../store/api-actions';\nimport { Link } from 'react-router-dom';\nimport PageHeaderLogo from '../page-header-logo/page-header-logo';\n\nfunction LoginPage(): JSX.Element {\n  const randomCityName = getRandomArrayItem(Object.keys(Cities));\n  const dispatch = useDispatch();\n  return (\n    <div className=\"page page--gray page--login\">\n      <header className=\"header\" data-testid=\"login-header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <PageHeaderLogo />\n          </div>\n        </div>\n      </header>\n      <main className=\"page__main page__main--login\" data-testid=\"login-main\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <LoginPageForm />\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link\n                className=\"locations__item-link\"\n                to=\"/\"\n                onClick={ () => dispatch(initActiveCityAction(randomCityName)) }\n                data-testid=\"random-link\"\n              >\n                <span>\n                  { randomCityName }\n                </span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\n\ntype OfferPageGalleryTypes = {\n  images: string[],\n}\n\nfunction OfferPageGallery(props: OfferPageGalleryTypes): JSX.Element {\n  const { images } = props;\n  const imagesGallery = images.map((item, index) => (\n    <div className=\"property__image-wrapper\" key={ item + index.toString() }>\n      <img className=\"property__image\" src={ item } alt=\"Interior view\" />\n    </div>\n  ));\n\n  return (\n    <div className=\"property__gallery-container container\">\n      <div className=\"property__gallery\">\n        { imagesGallery }\n      </div>\n    </div>\n  );\n}\n\nexport default OfferPageGallery;\n","import React from 'react';\n\ntype OfferPageGoodsTypes = {\n  goods: string[],\n}\n\nfunction OfferPageGoods(props: OfferPageGoodsTypes): JSX.Element {\n  const { goods } = props;\n  const goodsList = goods.map((item) => (\n    <li className=\"property__inside-item\" key={ item }>\n      { item }\n    </li>\n  ));\n\n  return (\n    <div className=\"property__inside\">\n      <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n      <ul className=\"property__inside-list\">\n        { goodsList }\n      </ul>\n    </div>\n  );\n}\n\nexport default OfferPageGoods;\n","import React from 'react';\n\ntype OfferPageHostTypes = {\n  host: {\n    avatarUrl: string,\n    id: string,\n    isPro: boolean,\n    name: string,\n  },\n}\n\nfunction OfferPageHost(props: OfferPageHostTypes): JSX.Element {\n  const { host } = props;\n  const { name, avatarUrl, isPro } = host;\n  const proWrapperClass = isPro\n    ? 'property__avatar-wrapper property__avatar-wrapper--pro user__avatar-wrapper'\n    : 'property__avatar-wrapper user__avatar-wrapper';\n  return (\n    <div className=\"property__host\">\n      <h2 className=\"property__host-title\">Meet the host</h2>\n      <div className=\"property__host-user user\">\n        <div className={ proWrapperClass }>\n          <img className=\"property__avatar user__avatar\" src={ avatarUrl } width=\"74\" height=\"74\"\n            alt=\"Host avatar\"\n          />\n        </div>\n        <span className=\"property__user-name\">\n          { name }\n        </span>\n        {\n          isPro &&\n          <span className=\"property__user-status\">\n            Pro\n          </span>\n        }\n      </div>\n      <div className=\"property__description\">\n        <p className=\"property__text\">\n          A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam. The building is\n          green and from 18th century.\n        </p>\n        <p className=\"property__text\">\n          An independent House, strategically located between Rembrand Square and National Opera, but where the bustle\n          of the city comes to rest in this alley flowery and colorful.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default OfferPageHost;\n","import React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport { Marker } from 'leaflet';\nimport { ACTIVE_CUSTOM_ICON, DEFAULT_CUSTOM_ICON } from '../../const';\nimport { CityLocationTypes, PointTypes } from '../../types/state-types';\nimport useMap from '../../hooks/use-map';\n\ntype OfferPageMapTypes = {\n  cityLocation: CityLocationTypes,\n  nearbyPoints: PointTypes[],\n  currentPoint: PointTypes,\n}\n\nfunction OfferPageMap(props: OfferPageMapTypes): JSX.Element {\n  const { cityLocation, nearbyPoints, currentPoint } = props;\n  const offerMapRef = useRef(null);\n  const map = useMap(offerMapRef, cityLocation);\n\n  useEffect(() => {\n    if (map) {\n      const nearbyMarkers: Marker[] = [];\n      nearbyPoints.forEach((point) => {\n        const nearbyMarker = new Marker(\n          [point.latitude, point.longitude],\n        );\n        nearbyMarkers.push(nearbyMarker);\n        nearbyMarker.setIcon(DEFAULT_CUSTOM_ICON).addTo(map);\n      });\n\n      const currentMarker = new Marker(\n        [currentPoint.latitude, currentPoint.longitude],\n      );\n      currentMarker.setIcon(ACTIVE_CUSTOM_ICON).addTo(map);\n\n      return () => {\n        nearbyMarkers.forEach((marker: Marker) => marker.removeFrom(map));\n        currentMarker.removeFrom(map);\n      };\n    }\n  });\n\n  return (\n    <section\n      className=\"property__map map\"\n      ref={ offerMapRef }\n      data-testid=\"offer-map\"\n    />\n  );\n}\n\nexport default OfferPageMap;\n","import React from 'react';\nimport { CardArticleClasses, CardImgWrapperClasses } from '../../const';\nimport OfferCard from '../offer-card/offer-card';\nimport { OfferDataTypes } from '../../types/offer-data-types';\n\ntype OfferPageNearListTypes = {\n  nearOffersData: OfferDataTypes[],\n}\n\nfunction OfferPageNearList(props: OfferPageNearListTypes): JSX.Element {\n  const { nearOffersData } = props;\n  const nearCards = nearOffersData.map((cardItem) => (\n    <OfferCard\n      key={ cardItem.id }\n      data={ cardItem }\n      articleClass={ CardArticleClasses.NEARBY_LIST }\n      imgWrapperClass={ CardImgWrapperClasses.NEARBY_LIST }\n    />\n  ));\n\n  return (\n    <div className=\"container\">\n      <section className=\"near-places places\">\n        <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n        <div className=\"near-places__list places__list\">\n          { nearCards }\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default OfferPageNearList;\n","import React from 'react';\nimport { CommentsFrontTypes } from '../../types/comments-types';\nimport { getVisualRating } from '../../utils/project-specific-utils';\nimport { MONTHS } from '../../const';\n\ntype OfferPageCommentTypes = {\n  commentData: CommentsFrontTypes,\n}\n\nfunction OfferPageComment(props: OfferPageCommentTypes): JSX.Element {\n  const { commentData } = props;\n  const { date, rating, user, comment } = commentData;\n  const visualRating = getVisualRating(rating);\n  const dateObject = new Date(date);\n  const dateString = `${ MONTHS[dateObject.getMonth()] } ${ dateObject.getFullYear() }`;\n  const dateTimeString = `${ dateObject.getFullYear() }-${ dateObject.getMonth() + 1 }-${ dateObject.getDate() }`;\n\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={ user.avatarUrl } width=\"54\" height=\"54\"\n            alt=\"Reviews avatar\"\n          />\n        </div>\n        <span className=\"reviews__user-name\">\n          { user.name }\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={ { width: visualRating } } />\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          { comment }\n        </p>\n        <time className=\"reviews__time\" dateTime={ dateTimeString }>{ dateString }</time>\n      </div>\n    </li>\n  );\n}\n\nexport default OfferPageComment;\n","import React from 'react';\nimport { CommentsFrontTypes } from '../../types/comments-types';\nimport OfferPageComment from '../offer-page-comment/offer-page-comment';\nimport { sortCommentsByDate } from '../../utils/project-specific-utils';\n\nexport type OfferPageCommentsListTypes = {\n  commentsData: CommentsFrontTypes[],\n}\n\nfunction OfferPageCommentsList(props: OfferPageCommentsListTypes): JSX.Element {\n  const { commentsData } = props;\n  const commentsList = sortCommentsByDate(commentsData)\n    .map((dataItem) => (\n      <OfferPageComment\n        key={ dataItem.id }\n        commentData={ dataItem }\n      />\n    ));\n\n  return (\n    <>\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{ commentsList.length }</span>\n      </h2>\n      <ul className=\"reviews__list\">\n        { commentsList }\n      </ul>\n    </>\n  );\n}\n\nexport default OfferPageCommentsList;\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { adaptCommentsToFront } from '../../utils/adapters';\nimport {\n  APIRoute,\n  INITIAL_RATING,\n  INITIAL_REVIEW_STATE,\n  MIN_COMMENT_LENGTH,\n  NotificationMessage,\n  RatingPosition\n} from '../../const';\nimport { CommentPostTypes } from '../../types/comments-types';\nimport { notifyError, notifySuccess } from '../../utils/project-specific-utils';\nimport { createFreeApi } from '../../services/api';\nimport { setCurrentHotelComments } from '../../store/actions';\n\nfunction OfferPageNewComment(props: { id: string }): JSX.Element {\n  const dispatch = useDispatch();\n  const { id } = props;\n  const [rating, setRating] = useState(INITIAL_RATING);\n  const [review, setReview] = useState(INITIAL_REVIEW_STATE);\n  const [submitIsDisabled, setSubmitIsDisabled] = useState(true);\n  const freeAPI = createFreeApi();\n\n  useEffect(() => {\n    if (rating.every((item) => !item) || review.length < MIN_COMMENT_LENGTH) {\n      setSubmitIsDisabled(true);\n    } else {\n      setSubmitIsDisabled(false);\n    }\n  }, [rating, review]);\n\n  const handleTextAreaChange = (evt: ChangeEvent<HTMLTextAreaElement>): void => {\n    evt.preventDefault();\n    setReview(() => evt.target.value);\n  };\n\n  const handleRatingChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    setRating(() => {\n      const newRating = [...INITIAL_RATING];\n      newRating[+evt.target.value - 1] = true;\n      return newRating;\n    });\n  };\n\n  const postNewComment = async (comment: CommentPostTypes, offerId: string): Promise<AxiosResponse> => (\n    await freeAPI.post(`${ APIRoute.Comments }/${ offerId }`, comment)\n  );\n\n  const handleFormSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    setSubmitIsDisabled(true);\n    const newReview: CommentPostTypes = {\n      comment: review,\n      rating: rating.findIndex((item) => item) + 1,\n    };\n    postNewComment(newReview, id)\n      .then(({ data }) => {\n        dispatch(setCurrentHotelComments(adaptCommentsToFront(data)));\n        setRating(INITIAL_RATING);\n        setReview('');\n        notifySuccess(NotificationMessage.PostSuccess);\n      })\n      .catch(() => {\n        setSubmitIsDisabled(false);\n        notifyError(NotificationMessage.PostError);\n      });\n  };\n\n  return (\n    <form\n      className=\"reviews__form form\"\n      action=\"#\"\n      method=\"post\"\n      onSubmit={ handleFormSubmit }\n    >\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <div className=\"reviews__rating-form form__rating\">\n        <input\n          className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"5\"\n          id=\"5-stars\"\n          type=\"radio\"\n          checked={ rating[RatingPosition.Perfect] }\n          onChange={ handleRatingChange }\n        />\n        <label htmlFor=\"5-stars\" className=\"reviews__rating-label form__rating-label\" title=\"perfect\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\" />\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"4\"\n          id=\"4-stars\"\n          type=\"radio\"\n          checked={ rating[RatingPosition.Good] }\n          onChange={ handleRatingChange }\n        />\n        <label htmlFor=\"4-stars\" className=\"reviews__rating-label form__rating-label\" title=\"good\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\" />\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"3\"\n          id=\"3-stars\"\n          type=\"radio\"\n          checked={ rating[RatingPosition.NotBad] }\n          onChange={ handleRatingChange }\n        />\n        <label htmlFor=\"3-stars\" className=\"reviews__rating-label form__rating-label\" title=\"not bad\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\" />\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"2\"\n          id=\"2-stars\"\n          type=\"radio\"\n          checked={ rating[RatingPosition.Badly] }\n          onChange={ handleRatingChange }\n        />\n        <label htmlFor=\"2-stars\" className=\"reviews__rating-label form__rating-label\" title=\"badly\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\" />\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"1\"\n          id=\"1-star\"\n          type=\"radio\"\n          checked={ rating[RatingPosition.Terribly] }\n          onChange={ handleRatingChange }\n        />\n        <label htmlFor=\"1-star\" className=\"reviews__rating-label form__rating-label\"\n          title=\"terribly\"\n        >\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\" />\n          </svg>\n        </label>\n      </div>\n      <textarea\n        className=\"reviews__textarea form__textarea\"\n        id=\"review\"\n        name=\"review\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        value={ review }\n        onChange={ handleTextAreaChange }\n      />\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          To submit review please make sure to set\n          <span className=\"reviews__star\">rating</span>\n          and describe your stay with at least\n          <b className=\"reviews__text-amount\">50 characters</b>.\n        </p>\n        <button\n          className=\"reviews__submit form__submit button\"\n          type=\"submit\"\n          disabled={ submitIsDisabled }\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default OfferPageNewComment;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus, getCurrentHotelComments } from '../../store/selectors';\nimport { getCommentsDataAction } from '../../store/api-actions';\nimport OfferPageCommentsList from '../offer-page-comments-list/offer-page-comments-list';\nimport OfferPageNewComment from '../offer-page-new-comment/offer-page-new-comment';\n\nfunction OfferPageReviews(props: { id: string }): JSX.Element {\n  const currentHotelComments = useSelector(getCurrentHotelComments);\n  const authorization = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n  const { id } = props;\n\n  useEffect(() => {\n    dispatch(getCommentsDataAction(id));\n  }, [id, dispatch]);\n\n  return (\n    <section className=\"property__reviews reviews\">\n      {\n        currentHotelComments.length > 0\n        &&\n        <OfferPageCommentsList\n          commentsData={ currentHotelComments }\n        />\n      }\n      {\n        authorization === AuthorizationStatus.Auth\n        &&\n        <OfferPageNewComment id={ id } />\n      }\n    </section>\n  );\n}\n\nexport default OfferPageReviews;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { MAX_IMAGES_NUMBER } from '../../const';\nimport { getCurrentHotel, getNearOffersData } from '../../store/selectors';\nimport { getNearOffersAction, getOfferDataAction } from '../../store/api-actions';\nimport { getVisualRating } from '../../utils/project-specific-utils';\nimport OfferPageGallery from '../offer-page-gallery/offer-page-gallery';\nimport OfferPageGoods from '../offer-page-goods/offer-page-goods';\nimport OfferPageHost from '../offer-page-host/offer-page-host';\nimport OfferPageMap from '../offer-page-map/offer-page-map';\nimport OfferPageNearList from '../offer-page-near-list/offer-page-near-list';\nimport OfferPageBookmark from '../offer-page-bookmark/offer-page-bookmark';\nimport OfferPageReviews from '../offer-page-reviews/offer-page-reviews';\nimport withHandleClick from '../../hocs/with-handle-click';\n\nconst OfferPageBookmarkWrapped = withHandleClick(OfferPageBookmark);\n\nfunction OfferPageMain(): JSX.Element {\n  const pageData = useSelector(getCurrentHotel);\n  const nearOffersData = useSelector(getNearOffersData);\n  const dispatch = useDispatch();\n  const { isFavorite, isPremium, host, price, rating, bedrooms, maxAdults, type, images, goods, city, id: offerId, title } = pageData;\n  const visualRating = getVisualRating(rating);\n\n  const nearbyPoints = nearOffersData.map((item) => ({\n    latitude: item.location.latitude,\n    longitude: item.location.longitude,\n    id: item.id,\n  }));\n  const currentPoint = {\n    latitude: pageData.location.latitude,\n    longitude: pageData.location.longitude,\n    id: pageData.id,\n  };\n\n  const { id } = useParams() as { id: string };\n\n  useEffect(() => {\n    !offerId && dispatch(getOfferDataAction(id));\n    dispatch(getNearOffersAction(id));\n  }, [dispatch, id, offerId]);\n\n  return (\n    <main className=\"page__main page__main--property\" data-testid=\"offer-main\">\n      <section className=\"property\">\n        { images.length > 0 && <OfferPageGallery images={ images.slice(0, MAX_IMAGES_NUMBER) } /> }\n        <div className=\"property__container container\">\n          <div className=\"property__wrapper\">\n            {\n              isPremium &&\n              <div className=\"property__mark\">\n                <span>Premium</span>\n              </div>\n            }\n            <div className=\"property__name-wrapper\">\n              <h1 className=\"property__name\">\n                { title }\n              </h1>\n              <OfferPageBookmarkWrapped\n                isFavorite={ isFavorite }\n                offerId={ offerId }\n                handleBookmarkClick={ () => null }\n              />\n            </div>\n            <div className=\"property__rating rating\">\n              <div className=\"property__stars rating__stars\">\n                <span style={ { width: visualRating } } />\n                <span className=\"visually-hidden\">Rating</span>\n              </div>\n              <span className=\"property__rating-value rating__value\">{ rating }</span>\n            </div>\n            <ul className=\"property__features\">\n              <li className=\"property__feature property__feature--entire\">\n                { type }\n              </li>\n              <li className=\"property__feature property__feature--bedrooms\">\n                { bedrooms } Bedrooms\n              </li>\n              <li className=\"property__feature property__feature--adults\">\n                Max { maxAdults } adults\n              </li>\n            </ul>\n            <div className=\"property__price\">\n              <b className=\"property__price-value\">&euro;{ price }</b>\n              <span className=\"property__price-text\">&nbsp;night</span>\n            </div>\n            { goods.length > 0 && <OfferPageGoods goods={ goods } /> }\n            <OfferPageHost\n              host={ host }\n            />\n            <OfferPageReviews\n              id={ id }\n            />\n          </div>\n        </div>\n        <OfferPageMap\n          cityLocation={ city.location }\n          nearbyPoints={ nearbyPoints }\n          currentPoint={ currentPoint }\n        />\n      </section>\n      {\n        nearOffersData.length > 0\n        &&\n        <OfferPageNearList\n          nearOffersData={ nearOffersData }\n        />\n      }\n    </main>\n  );\n}\n\nexport default OfferPageMain;\n","import React from 'react';\n\ntype OfferPageBookmarkTypes = {\n  isFavorite: boolean,\n  offerId: string,\n  handleBookmarkClick: ((offerId: string) => Promise<void>) | (() => null);\n}\n\nfunction OfferPageBookmark(props: OfferPageBookmarkTypes): JSX.Element {\n  const { isFavorite, offerId, handleBookmarkClick } = props;\n\n  const bookmarkButtonClass = isFavorite\n    ? 'property__bookmark-button property__bookmark-button--active button'\n    : 'property__bookmark-button button';\n\n  return (\n    <button\n      className={ bookmarkButtonClass }\n      type=\"button\"\n      onClick={ () => handleBookmarkClick(offerId) }\n    >\n      <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n        <use xlinkHref=\"#icon-bookmark\" />\n      </svg>\n      <span className=\"visually-hidden\">To bookmarks</span>\n    </button>\n  );\n}\n\nexport default OfferPageBookmark;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFetchStatus } from '../../store/selectors';\nimport { FetchStatus } from '../../const';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport OfferPageMain from '../offer-page-main/offer-page-main';\nimport PageHeader from '../page-header/page-header';\nimport SpinnerOffer from '../spinner-offer/spinner-offer';\n\nfunction OfferPage(): JSX.Element {\n  const isFetching = useSelector(getFetchStatus);\n\n  return (\n    <div className=\"page\">\n      { isFetching === FetchStatus.InProgress && <SpinnerOffer /> }\n      {\n        isFetching === FetchStatus.Success &&\n        <>\n          <PageHeader />\n          <OfferPageMain />\n        </>\n      }\n      { isFetching === FetchStatus.Error && <NotFoundPage /> }\n    </div>\n  );\n}\n\nexport default OfferPage;\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/selectors';\n\ntype PrivateRouteTypes = RouteProps & {\n  render: () => JSX.Element,\n};\n\nfunction PrivateRoute(props: PrivateRouteTypes): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const { path, exact, render } = props;\n\n  return (\n    <Route\n      path={ path }\n      exact={ exact }\n      render={ () => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={ AppRoute.Login } />\n      ) }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport FavoritesPage from '../favorites-page/favorites-page';\nimport HomePage from '../home-page/home-page';\nimport LoginPage from '../login-page/login-page';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport OfferPage from '../offer-page/offer-page';\nimport PrivateRoute from '../private-route/private-route';\n\nfunction App(): JSX.Element {\n  return (\n    <Switch>\n      <Route path={ AppRoute.Home } exact>\n        <HomePage />\n      </Route>\n\n      <Route path={ AppRoute.Login } exact>\n        <LoginPage />\n      </Route>\n\n      <PrivateRoute\n        exact\n        path={ AppRoute.Favorites }\n        render={ () => (\n          <FavoritesPage />\n        ) }\n      />\n\n      <Route path={ AppRoute.OfferId } exact>\n        <OfferPage />\n      </Route>\n\n      <Route>\n        <NotFoundPage />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AuthorizationStatus, DEFAULT_CITY_NAME } from './const';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Router } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport App from './components/app/app';\nimport browserHistory from './services/browser-history';\nimport { checkAuthAction, initActiveCityAction } from './store/api-actions';\nimport { createApi } from './services/api';\nimport { requireAuthorization } from './store/actions';\nimport { rootReducer } from './store/reducers/root-reducer';\nimport { ThunkAppDispatch } from './types/action-types';\n\nexport const api = createApi(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    thunk: {\n      extraArgument: api,\n    },\n  }),\n});\n\n(store.dispatch as ThunkAppDispatch)(checkAuthAction());\n(store.dispatch as ThunkAppDispatch)(initActiveCityAction(DEFAULT_CITY_NAME));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <Router history={ browserHistory }>\n        <ToastContainer />\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}